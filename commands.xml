<root>

  <category class="basic" display="Basic">

    <command name="alias"> 
      <usage>
        alias [name[=value] ... ]
      </usage>

      <description>
        Without arguments, `alias' prints the list of aliases.
        Otherwise, an alias is defined for each NAME whose VALUE is given.
      </description>
    </command>

    <command name="apply"> 
      <usage>
        apply -# cmd arg...
      </usage>

      <options> 
        <option name="-#">
          Normally arguments are taken singly; 
          the optional number -# specifies the number of arguments to be passed to command.  
          If the number is zero, command is run, without arguments, once for each argument.
        </option>
      </options>

      <description>
        The apply utility runs the named command on each argument argument in turn.
      </description>

    </command>

    <command name="basename"> 
      <usage>
        basename string [suffix]
      </usage>

      <description>
        Returns filename portion of the argument, stripping suffing or trailing forward slashes.
      </description>

    </command>

    <command name="banner"> 
      <usage>
        banner [ options ] text 
      </usage>

      <options> 
        <option name="-w">
          Optional argument suggests witdth to use when publishing a banner
        </option>
      </options>

      <description>
        Banner prints a large, high quality banner on the standard output.
      </description>

    </command>

    <command name="bash"> </command>

    <command name="cal"> 
      <usage>
        cal [ options ] [ month ] [ year ]
      </usage>

      <options> 

        <option name="-m">
          Show calendar for this month
        </option>

        <option name="-y">
          Show entire calendar for this year
        </option>
      </options>

      <description>
        * Shows calendar for current month if no options specified.
        * If month specified, show calendar for that month
        * If year is given displays calendar for that entire year
        * If both month and year is given show calendar for the combination of month and year on standard output
      </description>

    </command>


    <command name="chgrp"> 
      <usage>
        chgrp [ options ] group file...
      </usage>

      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="chmod"> 
      <usage>
        chmod [ options ] mode file...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="chown"> 
      <usage>
        chown [ options ] owner file...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="chroot"> 
      <usage>
        chroot [ options ] newroot [ command ]
      </usage>
      <options>
      </options>
      <description>
      </description>

    </command>


    <command name="clear"> 
      <usage>
        clear
      </usage>
      <description>
        Clears the screen. You could also use ^l on bash terminals with readline. 
      </description>
    </command>

    <command name="cp"> 
      <usage>
        cp [ options ] src... dst
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="dirname"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="echo"> 
      <usage>
        echo [ options ] text
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="env"> 
      <usage>
        env [ options ] [ name=value...] [ utility [ args... ] ]
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="exit"> 
      <usage>
        exit [ status ]
      </usage>
      <description>
        Exits with given status. Else exits with status >0
      </description>
    </command>

    <command name="file"> 
      <usage>
        file [ options ] file
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="find"> 
      <usage>
        find [ options ] path expression
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="hash"> 
      <usage>
        hash [options]
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="ls"> 
      <usage>
        ls [ options ] file...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="ln"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="locate"> 
      <usage>
        locate [ options ] pattern
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="md5"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="mkdir"> 
      <usage>
        mkdir [ options ] path...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="mv"> 
      <usage>
        mv [ options ] src.. dst
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="passwd"> 
      <usage>
        passwd [ options ] [ user ]
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="popd"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="pwd"> 
      <usage>
        pwd [ options ]
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="rmdir"> 
      <usage>
        rmdir path 
      </usage>
      <description>
      </description>
    </command>

    <command name="rm"> 
      <usage>
        rm [ options ] file...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="sleep"> 
      <usage>
        sleep n
      </usage>
      <description>
      </description>
    </command>

    <command name="su"> 
      <usage>
        su [ options ] [ login [ args ] ]
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="uname"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="ulimit"> 
      <usage>
        ulimit [ options ] [ limit ]
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="uptime"> 
      <usage>
        uptime
      </usage>
      <description>
        Shows uptime of the system
      </description>
    </command>

    <command name="unalias"> 
      <usage>
        unalias [ options ] name
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="unset"> 
      <usage>
        unset [ options ] name
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="wall"> 
      <usage>
        man [ options ] file
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="what"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>


    <command name="which"> 
      <usage>
        which [ options ] program...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="whichis"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="whereis"> 
      <usage>
        whereis programs...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="who"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="whoami">
      <usage>
        whoami
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="touch"> 
      <usage>
        touch [ options ] file...
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="xargs"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="tee"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>
  </category>

  <category name="text" display="Text Processing"> 
    <command name="less"> 
      <usage>
        less [ options ] file
      </usage>
      <options>
        <option name="-?"> 
          Help
        </option>
        <option name="-h"> 
          Help
        </option>
        <option name="-v"> 
          Version
        </option>
        <option name="--version"> 
          Version
        </option>
      </options>
      <description>
        * Less  is  a program similar to more (1), but which allows backward movement in the file as well as forward movement.
        * Also, less does not have to read the entire input file before starting
        * ^D - Scroll Down
        * ^U - Scroll Up
        * q  - Quit
        * SPACE - Scroll screenful
        * ^B - Scroll Backwards
        * ^L - Redraw the screen
        * /pattern - Match
        * ?pattern - Match Previous
        * n - Next match
        * N - Previous match
      </description>
    </command>

    <command name="awk"> 
      <usage>
        awk [ options ] file...
      </usage>
      <options>
        <option name="-F"> 
          Field Separator sets, $FS
        </option>

        <option name="-v var=value"> 
          Set a variable
        </option>

        <option name="-f file"> 
          Set the program file
        </option>
      </options>
      <description>

       Awk scans each input file for lines that match any of a set of patterns specified literally in prog or in one or more files specified
       as -f progfile.  With each pattern there can be an associated action that will be performed when a line of a file  matches  the  pat-
       tern.   Each  line  is  matched against the pattern portion of every pattern-action statement; the associated action is performed for
       each matched pattern.  The file name - means the standard input.  Any file of the form var=value is treated as an assignment,  not  a
       filename,  and  is  executed  at the time it would have been opened if it were a filename.  The option -v followed by var=value is an
       assignment to be done before prog is executed; any number of -v options may be present.  The -F fs option  defines  the  input  field
       separator to be the regular expression fs.

      </description>
    </command>


    <command name="comm"> 
      <usage>
        comm [ options ] file1 file2
      </usage>
      <options>
        <option name="-1"> 
          Supress column 1
        </option>

        <option name="-2"> 
          Supress column 2
        </option>

        <option name="-3"> 
          Supress column 3
        </option>

        <option name="-i"> 
          Case insensitive comparision
        </option>

      </options>
      <description>
        The comm utility reads file1 and file2, which should be sorted lexically, and produces three text columns as output: lines only in
        file1; lines only in file2; and lines in both files.
      </description>

    </command>

    <command name="bzcat"> 
      <usage>
        bzcat [ options ] file...
      </usage>
      <options>
        <option name="-s"> 
          Reduce memory usage
        </option>
      </options>
      <description>
        Uncompress files to STDOUT
      </description>
    </command>

    <command name="cut"> 
      <usage>
        cut [ options ] file
      </usage>
      <options>
        <option name="-d"> 
          Delimiter text
        </option>
        <option name="-f"> 
          Field list
        </option>
      </options>
      <description>
        The cut utility cuts out selected portions of each line (as specified by list) from each file and writes them to the standard output.
      </description>
    </command>

    <command name="diff"> 
      <usage>
        diff [options] files
      </usage>
      <options>
        <option name="-i | --ignorecase"> 
          Ignore case
        </option>
        <option name="-E"> 
          Ignore tab expansion
        </option>
        <option name="-w"> 
          Ignore all whitespace
        </option>
        <option name="-a"> 
          Treat all files as text
        </option>
        <option name="-q"> 
          Ouput only if the file is different, brief output
        </option>
        <option name="--normal"> 
          Normal diff output
        </option>
        <option name="--n"> 
          RCS style output
        </option>
        <option name="-y"> 
          Output in two columns
        </option>
        <option name="-r"> 
          Recursive
        </option>
        <option name="-d | --minimal"> 
          Try hard to find minimum changes
        </option>
        <option name="--version"> 
          Output version
        </option>
        <option name="--help"> 
          Help
        </option>
      </options>
      <description>
        Compare files line by line
      </description>
    </command>

    <command name="diff3"> </command>
    <command name="ex"> </command>
    <command name="gzcat"> </command>

    <command name="grep"> 
      <usage>
        grep [ options ] file...
      </usage>
      <options>
        <option name="-c"> 
          Show count
        </option>
        <option name="-E"> 
          Use extended regexp
        </option>
        <option name="-i"> 
          Ignore case
        </option>
        <option name="-n"> 
          Show line numbers
        </option>
        <option name="-P"> 
          Use perl regular expressions
        </option>
        <option name="-q"> 
          Quiet
        </option>
        <option name="-R"> 
          Recursive
        </option>
        <option name="-v"> 
          Invert match
        </option>
        <option name="-v"> 
          Invert match
        </option>
      </options>
      <description>
        Grep  searches  the  named  input FILEs (or standard input if no files are named, or the file name - is given) for lines containing a
        match to the given PATTERN.  By default, grep prints the matching lines.

        * egrep is same as grep -E
        * fgres is same as grep -F

      </description>
    </command>

    <command name="head"> 
      <usage>
        head [options] file...
      </usage>
      <options>
        <option name="-n"> 
          Number of lines to show
        </option>
      </options>
      <description>
        This filter displays the first count lines or bytes of each of the specified files, or of the standard input if no files are specified.
        If count is omitted it defaults to 10.
      </description>

    </command>

    <command name="tail"> 
      <usage>
        tail [ options ] file
      </usage>
      <options>
        <option name="-n"> 
          Number of lines to show
        </option>
        <option name="-f"> 
          Waits for additional data to be added to the end of the file
        </option>
        <option name="-r"> 
          Revers the order of the output
        </option>
      </options>
      <description>
        The tail utility displays the contents of file or, by default, its standard input, to the standard output.
      </description>
    </command>

    <command name="more"> </command>

    <command name="iconv"> 
      <usage>
        iconv [ options ]
      </usage>
      <options>
        <option name="-f"> 
          From encoding
        </option>
        <option name="-t"> 
          To encoding
        </option>
        <option name="-l"> 
          List all encoding
        </option>
        <option name="-c"> 
          Silently ignore all characters that can not be converted
        </option>
      </options>
      <description>
       The  iconv  program converts text from one encoding to another encoding.  More precisely, it converts from the encoding given for the
       -f option to the encoding given for the -t option. Either of these encodings defaults to the encoding of the current locale. All  the
       inputfiles  are  read  and  converted in turn; if no inputfile is given, the standard input is used. The converted text is printed to
       standard output.
      </description>
    </command>


    <command name="join"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="uniq"> 
      <usage>
        uniq [ options ] input_file [ output_file ]
      </usage>
      <options>
        <option name="-c"> 
          Preceed each line with count of number of times it appeared
        </option>
        <option name="-d"> 
          Only output repeated lines
        </option>
        <option name="-f"> 
          Ignore first n fields
        </option>
        <option name="-i"> 
          Case insensitinve comparision
        </option>
        <option name="-u"> 
          Output only lines that are not repeated
        </option>
      </options>
      <description>
        The uniq utility reads the specified input_file comparing adjacent lines, and writes a copy of each unique input line to the
     output_file.  If input_file is a single dash (`-') or absent, the standard input is read.  If output_file is absent, standard output is
     used for output.  The second and succeeding copies of identical adjacent input lines are not written.  Repeated lines in the input will
     not be detected if they are not adjacent, so it may be necessary to sort the files first. 
      </description>
    </command>

    <command name="sort"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="sed"> 
      <usage>
      </usage>
      <options>
      </options>
      <description>
      </description>
    </command>

    <command name="tr"> 
      <usage>
        tr [options] s1 s2
      </usage>
      <options>
        <option name="-d"> 
          Delete any occurance of string
        </option>
        <option name="-c"> 
          Complement selection
        </option>
        <option name="-s"> 
          Squeeze multiple occurances of string
        </option>
      </options>
      <description>
        The tr utility copies the standard input to the standard output with substitution or deletion of selected characters.
      </description>
    </command>

    <command name="wc"> 
      <usage>
        wc [options] file...
      </usage>
        <option name="-w"> 
          Number of words
        </option>
        <option name="-l"> 
          Number of lines
        </option>
        <option name="-c"> 
          Number of characters
        </option>
      <options>
      </options>
      <description>
        The wc utility displays the number of lines, words, and bytes contained in each input file, or standard input (if no file is specified)
        to the standard output.
      </description>
    </command>

  </category>

  <category name="job" display="Job Control"> 
    <command name="bg"> 
      <usage>
        bg [ jobspec ]
      </usage>
      <options>
      </options>
      <description>
        Place the jobs identified by each JOB_SPEC in the background, as if they
        had been started with `&amp;'.  If JOB_SPEC is not present, the shell's notion
        of the current job is used.
      </description>
    </command>

    <command name="fg"> 
      <usage>
        fg [ jobspec ]
      </usage>
      <options>
      </options>
      <description>
        Place the job identified by JOB_SPEC in the foreground, making it the
        current job.  If JOB_SPEC is not present, the shell's notion of the
        current job is used.
      </description>
    </command>

    <command name="disown"> 
      <usage>
        disown [ options ] [ jobspec ]
      </usage>
      <options>
        <option name="-a"> 
          Remove all jobs if JOBSPEC not specified
        </option>
        <option name="-h"> 
          Mark jobspec so SIGHUP is not sent
        </option>
        <option name="-r"> 
          Remove only running jobs
        </option>
      </options>
      <description>
      Remove jobs from current shell.
      </description>
    </command>

    <command name="kill"> 
      <usage>
        kill [options] pid...
      </usage>
      <options>
        <option name="-s"> 
          Signal name
        </option>
        <option name="-l"> 
          Exit status
        </option>
        <option name="-signal_name"> 
          Symbolic name of the signal
        </option>
        <option name="-#"> 
          Signal number to send
        </option>
      </options>
      <description>
        The kill utility sends a signal to the processes specified by the pid operand(s)
        
        ==SIGNALS==
        * HUP
        * INT
        * QUIT
        * ABRT
        * KILL
        * ALRM
        * TERM
      </description>
    </command>

    <command name="pkill"> 
      <usage>
        pkill [options] pattern
      </usage>
      <options>
        <option name="-u"> 
        Output only lines that are not repeated
        </option>
      </options>
      <description>
      </description>
    </command>

    <command name="pgrep"> </command>
    <command name="top"> </command>
    <command name="ps"> </command>
    <command name="nice"> </command>
    <command name="renice"> </command>
    <command name="at"> </command>
    <command name="nohup"> </command>
    <command name="crontab"> </command>
    <command name="batch"> </command>
  </category>

  <category name="util" display="Utils"> 
    <command name="screen"> </command>
    <command name="dtach"> </command>
    <command name="tar"> </command>
    <command name="gzip"> </command>
    <command name="gunzip"> </command>
    <command name="bzip2"> </command>
    <command name="bunzip2"> </command>
    <command name="zip"> </command>
    <command name="unzip"> </command>
    <command name="ssh"> </command>
    <command name="telnet"> </command>
    <command name="ftp"> </command>
    <command name="wget"> </command>
    <command name="curl"> </command>
    <command name="scp"> </command>
    <command name="openssl"> </command>
    <command name="sftp"> </command>
    <command name="ssh-keygen"> </command>
    <command name="ab"> </command>
    <command name="convert"> </command>
    <command name="dos2unix"> </command>
  </category>

  <category name="fun" display="Fun"> 
    <command name="cowsay"> </command>
    <command name="fortune"> </command>
  </category>

  <category name="sys" display="System Administration"> 
    <command name="df"> </command>
    <command name="du"> </command>
    <command name="adduser"> </command>
    <command name="addgrp"> </command>
    <command name="sudo"> </command>
    <command name="dig"> </command>
    <command name="finger"> </command>
    <command name="whois"> </command>
    <command name="ifconfig"> </command>
    <command name="iwconfig"> </command>
    <command name="route"> </command>
    <command name="tcpdump"> </command>
    <command name="netstat"> </command>
    <command name="lsof"> </command>
    <command name="lshw"> </command>
    <command name="fdisk"> </command>
    <command name="mkfs"> </command>
    <command name="fsck"> </command>
    <command name="mount"> </command>
    <command name="umount"> </command>
    <command name="iptables"> </command>
  </category>

  <category name="tools" display="Tools"> 

    <category name="apache" display="Apache">
      <command name="apachectl"> </command>
      <command name="httpd"> </command>
      <command name="ab"> </command>
    </category>

    <category name="mysql" display="MySQL">
      <command name="mysql"> </command>
      <command name="mysqld"> </command>
      <command name="mysqldump"> </command>
      <command name="mysqlimport"> </command>
    </category>

    <category name="postgres" display="PostgreSQL">
      <command name="psql"> </command>
    </category>

    <category name="nginx" display="nginx">
    </category>

    <category name="perl" display="Perl">
      <command name="perl"> </command>
      <command name="cpan"> </command>
      <command name="cpanm"> </command>
      <command name="perldoc"> </command>
      <command name="mojo"> </command>
      <command name="catalyst.pl"> </command>
    </category>

    <category name="python" display="Python">
      <command name="python"> </command>
    </category>

    <category name="ruby" display="Ruby">
      <command name="ruby"> </command>
      <command name="irb"> </command>
      <command name="erb"> </command>
    </category>
  </category>
</root>
